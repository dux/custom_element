// Generated by CoffeeScript 2.4.1
// create DOM custom element or polyfil for older browsers
var DOMCustomElement;

DOMCustomElement = {
  ping_interval: 100,
  data: {},
  attributes: function(node) {
    var el, i, o;
    o = {};
    i = 0;
    while (el = node.attributes[i]) {
      o[el.name] = el.value;
      i++;
    }
    return o;
  },
  define: function(name, func) {
    if (window.customElements) {
      return customElements.define(name, class extends HTMLElement {
        constructor() {
          super();
          window.requestAnimationFrame(() => {
            return func(this, DOMCustomElement.attributes(this));
          });
        }

      });
    } else {
      return this.data[name] = func;
    }
  },
  // manual node bind
  lazy: function() {
    var func, name, node, ref, results;
    ref = this.data;
    results = [];
    for (name in ref) {
      func = ref[name];
      results.push((function() {
        var j, len, ref1, results1;
        ref1 = Array.from(document.querySelectorAll(`${name}:not(.mounted)`));
        results1 = [];
        for (j = 0, len = ref1.length; j < len; j++) {
          node = ref1[j];
          node.classList.add('mounted');
          results1.push(func(node, this.attributes(node)));
        }
        return results1;
      }).call(this));
    }
    return results;
  }
};

// manual bind for old browsers
if (!window.customElements) {
  setInterval(() => {
    return DOMCustomElement.lazy();
  }, DOMCustomElement.ping_interval);
}

export default DOMCustomElement.define.bind(DOMCustomElement);
